variables:
  GIT_DEPTH: 1

workflow:
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_PIPELINE_SOURCE == "schedule"
  - if: $CI_PIPELINE_SOURCE == "web"

.base:
  image: alpine:latest
  variables:
    TF_VERSION: 1.8.2
    TF_URL: https://github.com/opentofu/opentofu/releases/download/v${TF_VERSION}/tofu_${TF_VERSION}_linux_amd64.zip

  before_script:
  - apk add --no-cache curl gcompat jq
  - curl -sLo /usr/local/bin/tofu.zip "$TF_URL"
  - unzip -d /usr/local/bin/ /usr/local/bin/tofu.zip tofu

verify:
  extends: .base
  stage: test
  script:
  - tofu fmt -check -diff -recursive
  - for i in environments/*; do tofu -chdir=$i init -backend=false; tofu -chdir=$i validate; done

.plan:
  extends: .base
  stage: test
  script:
  - cd environments/${TF_ENV}
  - tofu init
  - tofu plan -lock=false -refresh=false -out=plan.cache
  - tofu show -json plan.cache | jq -r '( [.resource_changes[]?.change.actions?] | flatten) | { "create":(map(select(.=="create")) | length), "update":(map(select(.=="update")) | length), "delete":(map(select(.=="delete")) | length) }' > plan.json
  cache:
    key: ${TF_ENV}
    paths:
    - environments/${TF_ENV}/.terraform
  artifacts:
    name: plan
    paths:
    - environments/${TF_ENV}/plan.cache
    reports:
      terraform: environments/${TF_ENV}/plan.json

plan prod:
  extends: .plan
  variables:
    TF_ENV: prod

plan staging:
  extends: .plan
  variables:
    TF_ENV: staging
